version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16.3-alpine
    container_name: paris_mechanical_db
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: paris_admin
      POSTGRES_PASSWORD: secure_password_change_me
      POSTGRES_DB: paris_mechanical
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=en_US.utf8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U paris_admin -d paris_mechanical"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - paris_network

  # Redis Cache
  redis:
    image: redis:7.2.5-alpine
    container_name: paris_mechanical_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --appendfsync everysec
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - paris_network

  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: paris_mechanical_pgadmin
    restart: unless-stopped
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@parismechanical.com
      PGADMIN_DEFAULT_PASSWORD: admin_password_change_me
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - paris_network

  # Redis Commander for Redis management
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: paris_mechanical_redis_commander
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - paris_network

  # Mailhog for email testing
  mailhog:
    image: mailhog/mailhog:latest
    container_name: paris_mechanical_mailhog
    restart: unless-stopped
    ports:
      - "1025:1025" # SMTP server
      - "8025:8025" # Web UI
    networks:
      - paris_network

  # MinIO for S3-compatible local storage
  minio:
    image: minio/minio:latest
    container_name: paris_mechanical_minio
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
      MINIO_DEFAULT_BUCKETS: paris-mechanical-dev
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - paris_network

  # Development database seed job
  seed:
    build:
      context: .
      dockerfile: Dockerfile.seed
    container_name: paris_mechanical_seed
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://paris_admin:secure_password_change_me@postgres:5432/paris_mechanical
    volumes:
      - ./prisma:/app/prisma
      - ./src:/app/src
    networks:
      - paris_network
    profiles:
      - seed

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local
  minio_data:
    driver: local

networks:
  paris_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16
